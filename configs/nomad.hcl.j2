#jinja2: trim_blocks:False
data_dir = "/var/lib/nomad/"
datacenter = {% if "wan-clients" in group_names %}"public"{% else %}"dc1"{% endif %}
log_level = "warn"
bind_addr = "0.0.0.0"
region = "home"

server {
  enabled          = {% if "lan-client-server" in group_names %}true{% else %}false{% endif %}
  bootstrap_expect = 3
  server_join {
    retry_join     = ["192.168.50.39", "192.168.50.113", "192.168.50.85"]
    retry_max      = 3
    retry_interval = "15s"
  }
  authoritative_region  = "home"
  heartbeat_grace = "300s"
  min_heartbeat_ttl = "20s"
}

client {
  enabled = true
{% raw %}
  network_interface = "{{ GetPrivateInterfaces | include \"network\" \"192.168.50.0/24\" | attr \"name\" }}"
{% endraw %}
  options {
    docker.auth.config = "/root/.docker/config.json"
    docker.privileged.enabled = true
    driver.raw_exec.enable = "1"
    docker.volumes.enabled = true
  }

  meta {
    shared_mount = {% if "wan-clients" in group_names %}"false"{% else %}"true"{% endif %}
    dns = {% if "wan-clients" in group_names %}"false"{% else %}"true"{% endif %}
    {%- if ansible_hostname == "klo01" %}
    keepalived_priority = "100"
    zigbee = "true"
    {%- else %}
    keepalived_priority = "{{ 200 | random(start=101) }}"
    {%- endif %}
  }

  host_network "lan" {
    cidr = "192.168.50.0/24"
    reserved_ports = "22,80"
  }

  host_network "tailscale" {
    cidr = "100.0.0.0/8"
    reserved_ports = "22,80"
  }

  {% if "wan-clients" in group_names %}
  host_network "public" {
    cidr = "78.47.90.68/32"
    reserved_ports = "22"
  }
  {%- endif %}

}

telemetry {
  disable_hostname = true
  prometheus_metrics = true
  publish_allocation_metrics = true
  publish_node_metrics = true
  use_node_name = false
}
{% raw %}
advertise {
  http = "{{ GetPrivateInterfaces | include \"network\" \"192.168.50.0/24\" | attr \"address\" }}:4646"
  rpc = "{{ GetPrivateInterfaces | include \"network\" \"192.168.50.0/24\" | attr \"address\" }}:4647"
  serf = "{{ GetPrivateInterfaces | include \"network\" \"192.168.50.0/24\" | attr \"address\" }}:4648"
}
{% endraw %}
consul {
  # The address to the Consul agent.
  {%- raw %}
  address = "127.0.0.1:8500"
  {%- endraw %}
  # The service name to register the server and client with Consul.

  client_service_name = "nomad-client"

  # Enables automatically registering the services.
  auto_advertise = true

  # Enabling the server and client to bootstrap using Consul.
  server_auto_join = true
  client_auto_join = true
}

#vault {
#  enabled = true
#  address = "http://vault.service.home:8200"
#  allow_unauthenticated = true
#  create_from_role = "nomad-cluster"
#}

plugin "docker" {
  config {
    allow_caps = ["CHOWN","DAC_OVERRIDE","FSETID","FOWNER","MKNOD","NET_RAW","SETGID","SETUID","SETFCAP","SETPCAP"," NET_BIND_SERVICE","SYS_CHROOT","KILL","AUDIT_WRITE","NET_ADMIN","NET_BROADCAST"]
    # extra Docker labels to be set by Nomad on each Docker container with the appropriate value
    extra_labels = ["job_name", "task_group_name", "task_name", "namespace", "node_name"]
    allow_privileged = true
    volumes {
      enabled      = true
      selinuxlabel = "z"
    }
  }
}
