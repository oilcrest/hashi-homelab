job "alertmanager" {
  region = var.region
  datacenters = ["dc1"]
  type = "service"

  meta {
    job_file = "nomad_jobs/observability/alertmanager/nomad.job"
    version = "3"
  }

  constraint {
    attribute = "${meta.shared_mount}"
    operator  = "="
    value     = "true"
  }

  update {
    max_parallel     = 1
    min_healthy_time = "30s"
    healthy_deadline = "5m"
    progress_deadline = "10m"
    auto_revert      = true
  }

  group "alerting" {
    count = 1
    
    ephemeral_disk {
      sticky = true
    }

    volume "alertmanager" {
      type      = "csi"
      read_only = false
      source    = "alertmanager"
      access_mode = "multi-node-single-writer"
      attachment_mode = "file-system"
    }
    network {
      port "http" {
        static = "9093"
      }
    }
    task "prep-disk" {
      driver = "docker"
      volume_mount {
        volume      = "alertmanager"
        destination = "/volume/"
        read_only   = false
      }
      config {
        image        = "busybox:latest"
        command      = "sh"
        args         = ["-c", "chown -R 1000:2000 /volume/ && chmod -R 755 /volume/"]
      }
      resources {
        cpu    = 200
        memory = 128
      }

      lifecycle {
        hook    = "prestart"
        sidecar = false
      }
    }

    task "alertmanager" {
      driver = "docker"
      user = "1000:2000"

      volume_mount {
        volume      = "alertmanager"
        destination = "/alertmanager"
        read_only   = false
      }
      
      service {
        name = "alertmanager"
        port = "http"
        tags = [
          "traefik.enable=true"
        ]

        check {
          type     = "tcp"
          port     = "http"
          interval = "10s"
          timeout  = "2s"
        }
      }

      config {
        image = "prom/alertmanager:v0.28.1"
        network_mode = "host"
        ports = ["http"]
        force_pull = true
        args = ["--web.external-url", "https://alertmanager.${var.tld}", "--config.file", "/local/config.yml", "--storage.path", "/alertmanager", "--web.listen-address", "0.0.0.0:9093"]
      }

      template {
        data = <<EOH
global:
  smtp_smarthost: 'smtp.service.home:25'
  smtp_from: 'alertmanager@example.org'

route:
  group_by: ['alertname', 'cluster', 'service', 'service_name', 'service_id']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'pushover'
  
  routes:
  - match:
      severity: critical
    receiver: 'pushover'
    group_wait: 5s
    group_interval: 5s
    repeat_interval: 15m
  - match:
      severity: warning
    receiver: 'pushover'
    group_wait: 30s
    group_interval: 30s
    repeat_interval: 1h
  - match:
      severity: page
    receiver: 'pushover'
    group_wait: 5s
    group_interval: 5s
    repeat_interval: 30m
  - match_re:
      alertname: ".*Down.*"
    receiver: 'pushover'
    group_wait: 5s
    group_interval: 5s
    repeat_interval: 15m

#  routes:
#  - match_re:
#      sendto: pushover 
#    group_wait: 5m
#    group_interval: 5m
#    repeat_interval: 5m
#    receiver: 'pushover' 
#    continue: false
#  - match_re:
#      sendto: slack
#    group_wait: 5m
#    group_interval: 5m
#    repeat_interval: 5m
#    receiver: 'slack'
#    continue: true
#  - match_re:
#      service_name: ^.*
#    group_wait: 5m
#    group_interval: 1h
#    repeat_interval: 1h 
#    receiver: 'default' 
#    continue: true

receivers:
- name: 'email'
  email_configs:
  - to: 'pmanuk@perrymanuk.com'

- name: pushover
  pushover_configs:
  - token: ${var.pushover_token}
    user_key: ${var.pushover_user_key}
    title: "ðŸš¨ {{ .GroupLabels.alertname }}"
    message: |
      {{ range .Alerts -}}
      Status: {{ .Status }}
      {{- if .Annotations.summary }}
      Summary: {{ .Annotations.summary }}
      {{- end }}
      {{- if .Annotations.description }}
      Description: {{ .Annotations.description }}
      {{- end }}
      {{- if .Labels.service }}
      Service: {{ .Labels.service }}
      {{- end }}
      {{- if .Labels.instance }}
      Instance: {{ .Labels.instance }}
      {{- end }}
      {{ end }}
    priority: 1
    sound: pushover

EOH

        destination = "local/config.yml"
        env         = false
      }

      resources {
        cpu    = 100
        memory = 256
      }
    }
  }
}

variable "region" {
  type = string
}

variable "tld" {
  type = string
}

variable "pushover_token" {
  type = string
}

variable "pushover_user_key" {
  type = string
}
