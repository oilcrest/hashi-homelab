job "crawl4ai" {
  region      = var.region
  datacenters = ["dc1"]
  type        = "service"

  meta {
    job_file = "nomad_jobs/web-apps/crawl4ai/nomad.job"
    version  = "1"
  }

  constraint {
    attribute = "${meta.shared_mount}"
    operator  = "="
    value     = "true"
  }

  group "app" {
    count = 1

    network {
      port "http" {
        to = 11235
      }
    }

    volume "crawl4ai" {
      type            = "csi"
      read_only       = false
      source          = "crawl4ai-data"
      access_mode     = "single-node-writer"
      attachment_mode = "file-system"
    }

    task "prep-disk" {
      driver = "docker"
      
      volume_mount {
        volume      = "crawl4ai"
        destination = "/volume/"
        read_only   = false
      }
      
      config {
        image   = "busybox:latest"
        command = "sh"
        args    = ["-c", "mkdir -p /volume/config && chmod -R 777 /volume/"]
      }
      
      resources {
        cpu    = 200
        memory = 128
      }

      lifecycle {
        hook    = "prestart"
        sidecar = false
      }
    }

    task "crawl4ai" {
      driver = "docker"

      config {
        image    = "unclecode/crawl4ai:0.6.0-r2"
        ports    = ["http"]
        shm_size = "1000000000"
        dns_servers = ["192.168.50.2"]
      }

      volume_mount {
        volume      = "crawl4ai"
        destination = "/app/data"
        read_only   = false
      }

      template {
        data = <<EOH
# Application Configuration
app:
  title: "Crawl4AI API"
  version: "0.6.0-r1"
  host: "0.0.0.0"
  port: 11235
  reload: False
  timeout_keep_alive: 300

# Default LLM Configuration
llm:
  provider: "gemini/gemini-2.5-flash-preview-04-17"
  api_key_env: "${var.litellm_crawl4ai_key}"
  api_base: "https://litellm.${var.tld}"

# Redis Configuration
redis:
  host: "redis.service.consul"
  port: 6379

# Rate Limiting Configuration
rate_limit:
  enabled: true
  limits:
    default: "60/minute"
    html: "120/minute" 
    screenshot: "30/minute"
    pdf: "15/minute"
  storage_uri: "redis://redis.service.consul:6379"

# Security Configuration
security:
  enabled: false
  jwt_enabled: false
  https_redirect: false
  trusted_hosts: ["*"]
  headers:
    x_content_type_options: "nosniff"
    x_frame_options: "DENY"
    content_security_policy: "default-src 'self'"
    strict_transport_security: "max-age=63072000; includeSubDomains"

# Crawler Configuration
crawler:
  memory_threshold_percent: 95.0
  rate_limiter:
    base_delay: [1.0, 2.0]
  timeouts:
    stream_init: 30.0
    batch_process: 300.0

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Observability Configuration
observability:
  prometheus:
    enabled: True
    endpoint: "/metrics"
  health_check:
    endpoint: "/health"
EOH

        destination   = "/app/data/config/config.yml"
        change_mode   = "restart"
      }

      resources {
        cpu    = 1000
        memory = 1024
      }

      env {
        PORT = "11235"
        CONFIG_PATH = "/app/data/config/config.yml"
        OPENAI_API_KEY = "${var.litellm_crawl4ai_key}"
      }

      service {
        port = "http"
        name = "crawl4ai"
        tags = [
          "traefik.enable=true"
        ]

        check {
          type     = "http"
          path     = "/health"
          port     = "http"
          interval = "10s"
          timeout  = "2s"
        }
      }
    }
  }
}

variable "region" {}
variable "tld" {}
variable "shared_dir" {}
variable "litellm_crawl4ai_key" {}
